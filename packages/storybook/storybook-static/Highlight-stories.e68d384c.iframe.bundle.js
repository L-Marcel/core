"use strict";(self.webpackChunk_lmarcel_book=self.webpackChunk_lmarcel_book||[]).push([[230],{"./stories/Highlight.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Full:()=>Full,OneLine:()=>OneLine,Primary:()=>Primary,WithScroll:()=>WithScroll,WithoutNumbers:()=>WithoutNumbers,__namedExportsOrder:()=>__namedExportsOrder,bash:()=>bash,c:()=>c,clike:()=>clike,cpp:()=>cpp,css:()=>css,default:()=>Highlight_stories,diff:()=>diff,git:()=>git,go:()=>go,graphql:()=>graphql,handlebars:()=>handlebars,javascript:()=>javascript,json:()=>json,jsx:()=>jsx,latex:()=>latex,less:()=>less,makefile:()=>makefile,markdown:()=>markdown,markup:()=>markup,objectivec:()=>objectivec,ocaml:()=>ocaml,python:()=>python,reason:()=>reason,sass:()=>sass,scss:()=>scss,sql:()=>sql,stylus:()=>stylus,typescript:()=>typescript,yaml:()=>yaml});var dist=__webpack_require__("../highlight/dist/index.js"),__tsx="import React from 'react';\n\ntype Props = {\n  name: string;\n  age: number;\n};\n\nconst MyComponent: React.FC<Props> = ({ name, age }) => {\n  const [count, setCount] = React.useState(0);\n  const handleClick = () => setCount(count + 1);\n\n  return (\n    <div>\n      <h1>Meu componente</h1>\n      <p>Nome: {name}</p>\n      <p>Idade: {age}</p>\n      <p>Você clicou {count} vezes</p>\n      <button onClick={handleClick}>\n        Clique aqui\n      </button>\n    </div>\n  );\n};\n\nexport default MyComponent;";const Highlight_stories={title:"Highlight/Examples",component:__webpack_require__.n(dist)(),args:{full:!1,theme:"oneDark",language:"tsx",children:'export function Highlight({ \n  children, \n  theme = "default" \n}: HighlightProps, test: string) {\n  type HighlightTheme = keyof typeof themes;\n\n  return (\n    <CodeBlock\n      code={children}\n      theme={themes[theme]}\n      languageuage="tsx"\n    />\n  );\n}'},argTypes:{theme:{options:["oneDark","dracula","duotoneDark","duotoneLight","github","nightOwl","nightOwlLight","oceanicNext","palenight","okaidia","shadesOfPurple","synthwave84","ultramin","vsDark","vsLight"],control:{type:"select"}},language:{options:(0,dist.getAllLanguagesInputs)(),control:{type:"select"}}}};var Primary={name:"Tsx",args:{language:"tsx",children:__tsx}},Full={name:"Full Width",args:{language:"tsx",full:!0,children:__tsx}},WithScroll={name:"With Scroll",args:{language:"tsx",children:__tsx,style:{maxWidth:450}}},WithoutNumbers={name:"Without Numbers",args:{language:"tsx",showNumbers:!1,children:__tsx}},OneLine={name:"One Line",args:{language:"tsx",children:"l-marcel setup"}},typescript={args:{language:"typescript",children:"enum Role {\n  ADMIN,\n  USER,\n  GUEST\n}\n\nclass User {\n  name: string;\n  role: Role;\n\n  constructor(name: string, role: Role) {\n    this.name = name;\n    this.role = role;\n  }\n\n  getPermissions(): string[] {\n    switch (this.role) {\n      case Role.ADMIN:\n        return ['create', 'read', 'update', 'delete'];\n      case Role.USER:\n        return ['read', 'update'];\n      case Role.GUEST:\n        return ['read'];\n      default:\n        return [];\n    }\n  }\n}\n\nconst user = new User('John', Role.USER);\nconsole.log(user.getPermissions());"}},javascript={args:{language:"javascript",children:"const getData = async () => {\n  try {\n    const response = await fetch('https://api.example.com/data');\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\ngetData()\n  .then(data => console.log(data))\n  .catch(error => console.error(error));\n"}},jsx={args:{language:"jsx",children:"import React from 'react';\n\nconst MyComponent = () => {\n  const [count, setCount] = React.useState(0);\n  const handleClick = () => setCount(count + 1);\n\n  return (\n    <div>\n      <h1>Meu componente</h1>\n      <p>Você clicou {count} vezes</p>\n      <button onClick={handleClick}>\n        Clique aqui\n      </button>\n    </div>\n  );\n};\n\nexport default MyComponent;"}},markup={name:"Html/Markup",args:{language:"html",children:'<!DOCTYPE html>\n<html lang="en">\n<head>\n  <meta charset="UTF-8">\n  <title>Document</title>\n</head>\n<body>\n  <header>\n    <nav>\n      <ul>\n        <li><a href="#">Home</a></li>\n        <li><a href="#">About</a></li>\n        <li><a href="#">Contact</a></li>\n      </ul>\n    </nav>\n  </header>\n  <main>\n    <h1>Welcome!</h1>\n  </main>\n  <footer>\n    <p>Copyright 2023</p>\n  </footer>\n</body>\n</html>'}},bash={args:{language:"bash",children:"#!/bin/bash\n\n# Atualizar os pacotes do sistema\nsudo apt-get update\n\n# Instalar o Apache\nsudo apt-get install apache2 -y\n\n# Habilitar o módulo rewrite do Apache\nsudo a2enmod rewrite\n\n# Habilitar o Virtual Host do Apache\nsudo cp /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/app.conf\n\n# Alterar o DocumentRoot do Virtual Host para o diretório da aplicação\nsed -i 's|/var/www/html|/var/www/app|g' /etc/apache2/sites-available/app.conf\n\n# Desabilitar o Virtual Host padrão e habilitar o novo Virtual Host\nsudo a2dissite 000-default.conf\nsudo a2ensite app.conf\n\n# Reiniciar o Apache\nsudo systemctl restart apache2"}},clike={args:{language:"clike",children:'#include <stdio.h>\n\nint main() {\n  int a = 10;\n  int b = 20;\n  int c = a + b;\n  printf("%d + %d = %d\\n", a, b, c);\n  return 0;\n}'}},c={args:{language:"c",children:'#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\n\nint main() {\n  srand(time(NULL));\n  int randomNumber = rand();\n  printf("Número aleatório: %d\\n", randomNumber);\n  return 0;\n}'}},cpp={args:{language:"cpp",children:'#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint main() {\n  string name;\n  cout << "Enter your name: ";\n  getline(cin, name);\n  cout << "Hello, " << name << "!" << endl;\n  return 0;\n}'}},css={args:{language:"css",children:"body {\n  font-family: sans-serif;\n  color: #333;\n  background-color: #fafafa;\n}\n\nh1 {\n  font-size: 2em;\n  margin: 0.5em 0;\n}\n\np {\n  font-size: 1.5em;\n  margin: 0.5em 0;\n}\n\na {\n  color: #0070f3;\n  text-decoration: none;\n}\n\na:hover,\na:focus {\n  color: #0050e3;\n}\n\na:active {\n  color: #0040d3;\n}"}},diff={args:{language:"diff",children:'--- a/index.html\n+++ b/index.html\n@@ -1,7 +1,7 @@\n <!DOCTYPE html>\n <html lang="en">\n   <head>\n-    <link/>\n-    <meta charset="UTF-8">\n+    <meta charset="UTF-8" />\n     <title>Document</title>\n   </head>\n   <body>\n@@ -10,7 +10,7 @@\n       <li><a href="#">About</a></li>\n       <li><a href="#">Contact</a></li>\n     </ul>\n-  </nav>\n+  </nav> \n   </header>\n   <main>\n     <h1>Welcome!</h1>'}},git={args:{language:"git",children:'git add .\ngit commit -m "[feat]: Um exemplo do git"\ngit push origin main --force'}},go={args:{language:"go",children:'package main\n\nimport "fmt"\n\nfunc main() {\n  numbers := []int{1, 2, 3, 4, 5}\n  sum := 0\n  for _, number := range numbers {\n    sum += number\n  }\n  fmt.Println("Sum:", sum)\n}'}},graphql={args:{language:"graphql",children:"type Query {\n  getUser(id: ID!): User\n}\n\ntype User {\n  id: ID!\n  name: String!\n  age: Int!\n  email: String!\n}\n\ntype Mutation {\n  createUser(name: String!, age: Int!, email: String!): User\n}"}},handlebars={args:{language:"handlebars",children:"<h1>{{title}}</h1>\n<ul>\n  {{#each items}}\n    <li>{{this}}</li>\n  {{/each}}\n</ul>\n{{#if hasItems}}\n  <p>There are items in the list</p>\n{{else}}\n  <p>The list is empty</p>\n{{/if}}"}},json={args:{language:"json",children:'{\n  "users": [\n    {\n      "id": 1,\n      "name": "John",\n      "age": 30,\n      "email": "john@example.com"\n    },\n    {\n      "id": 2,\n      "name": "Jane",\n      "age": 25,\n      "email": "jane@example.com"\n    }\n  ]\n}'}},less={args:{language:"less",children:"@color: #333;\n\nbody {\n  font-family: sans-serif;\n  color: @color;\n}\n\na {\n  color: darken(@color, 10%);\n  &:hover {\n    color: darken(@color, 20%);\n  }\n  &:active {\n    color: darken(@color, 30%);\n  }\n}\n\nh1 {\n  font-size: 2em;\n  margin: 0.5em 0;\n}\n\np {\n  font-size: 1.5em;\n  margin: 0.5em 0;\n}"}},makefile={args:{language:"makefile",children:"CC = gcc\nCFLAGS = -Wall -Wextra -Werror\n\nall: main.o factorial.o\n\t$(CC) $(CFLAGS) main.o factorial.o -o main\n\nmain.o: main.c\n\t$(CC) $(CFLAGS) -c main.c\n\nfactorial.o: factorial.c\n\t$(CC) $(CFLAGS) -c factorial.c\n\nclean:\n\trm -f *.o main\n\n.PHONY: all clean"}},markdown={args:{language:"markdown",children:"# Welcome to my blog\n\nHi there! My name is John and this is my blog. Here, I write about my interests and share my thoughts with the world.\n\n## Latest posts\n\n- [The importance of staying curious](/posts/stay-curious)\n- [5 tips for better time management](/posts/time-management)\n- [My favorite books of all time](/posts/favorite-books)\n\n## About me\n\nI'm a software developer and avid reader. In my free time, I enjoy traveling and trying new foods. I hope you enjoy reading my blog!"}},objectivec={args:{language:"objectivec",children:'#import <Foundation/Foundation.h>\n\nint main(int argc, const char * argv[]) {\n  @autoreleasepool {\n    NSLog(@"Hello, World!");\n  }\n  return 0;\n}'}},ocaml={args:{language:"ocaml",children:'let rec factorial n =\nif n = 0 then 1\nelse n * factorial (n - 1)\n\nlet () =\nlet n = 5 in\nlet result = factorial n in\nPrintf.printf "The factorial of %d is %d\\n" n result'}},python={args:{language:"python",children:'def factorial(n):\nif n == 0:\n    return 1\nelse:\n    return n * factorial(n - 1)\n\nn = 5\nresult = factorial(n)\nprintf("The factorial of {n} is {result}")'}},reason={args:{language:"reason",children:"let factorial = (n: int) => {\n  if (n == 0) {\n    1\n  } else {\n    n * factorial(n - 1)\n  }\n};\n\nlet n = 5;\nlet result = factorial(n);\nprint_endline(string_of_int(result));"}},sass={args:{language:"sass",children:"$font-stack: Helvetica, sans-serif\n$primary-color: #333\n\nbody\n  font: 100% $font-stack\n  color: $primary-color\n"}},scss={args:{language:"scss",children:"body {\n  font: 100% $font-stack;\n  color: $primary-color;\n}\n\na {\n  color: darken($primary-color, 10%);\n  &:hover {\n    color: darken($primary-color, 20%);\n  }\n  &:active {\n    color: darken($primary-color, 30%);\n  }\n}\n\nh1 {\n  font-size: 2em;\n  margin: 0.5em 0;\n}\n\np {\n  font-size: 1.5em;\n  margin: 0.5em 0;\n}"}},sql={args:{language:"sql",children:"CREATE TABLE users (\n  id INTEGER PRIMARY KEY,\n  name TEXT NOT NULL,\n  age INTEGER NOT NULL,\n  email TEXT NOT NULL UNIQUE\n);\n\nINSERT INTO users (name, age, email)\nVALUES ('John', 30, 'john@example.com'),\n       ('Jane', 25, 'jane@example.com');\n\nSELECT * FROM users;"}},stylus={args:{language:"stylus",children:"body\nfont: 100% font-stack\ncolor: primary-color\n\na\ncolor: darken(primary-color, 10%)\n&:hover\n  color: darken(primary-color, 20%)\n&:active\n  color: darken(primary-color, 30%)\n\nh1\nfont-size: 2em\nmargin: 0.5em 0\n\np\nfont-size: 1.5em\nmargin: 0.5em 0"}},yaml={args:{language:"yaml",children:"applications:\n- name: my-app\n  memory: 128M\n  instances: 1\n  domain: example.com\n  host: my-app\n  path: .\n  buildpack: nodejs_buildpack\n- name: my-other-app\n  memory: 256M\n  instances: 2\n  domain: example.com\n  host: my-other-app\n  path: .\n  buildpack: python_buildpack"}},latex={args:{language:"latex",children:"x = \\frac{5}{4}"}},__namedExportsOrder=["Primary","Full","WithScroll","WithoutNumbers","OneLine","typescript","javascript","jsx","markup","bash","clike","c","cpp","css","diff","git","go","graphql","handlebars","json","less","makefile","markdown","objectivec","ocaml","python","reason","sass","scss","sql","stylus","yaml","latex"]}}]);